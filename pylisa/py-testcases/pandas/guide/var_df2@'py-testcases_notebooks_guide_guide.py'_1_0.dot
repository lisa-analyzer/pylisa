digraph {
	"node0" [shape="rect",color="black",label=<read(mapa.csv)<BR/><BR/>at: 'py-testcases/notebooks/guide/guide.py':91:28>];
	"node1" [shape="rect",color="gray",label=<filter_null(ROWS)<BR/><BR/>at: 'py-testcases/notebooks/guide/guide.py':92:31>];
	"node2" [shape="rect",color="gray",label=<access:[geometry]<BR/><BR/>at: 'py-testcases/notebooks/guide/guide.py':93:14>];
	"node3" [shape="rect",color="gray",label=<access:[Pa&iacute;s]<BR/><BR/>at: 'py-testcases/notebooks/guide/guide.py':93:36>];
	"node4" [shape="rect",color="gray",label=<TO_GEOCODE([Pa&iacute;s])<BR/><BR/>at: 'py-testcases/notebooks/guide/guide.py':93:59>];
	"node5" [shape="rect",color="gray",label=<assign_to:[geometry]<BR/><BR/>at: 'py-testcases/notebooks/guide/guide.py':93:71>];
	"node6" [shape="rect",color="gray",label=<project:[geometry]<BR/><BR/>at: 'py-testcases/notebooks/guide/guide.py':93:71>];
	"node7" [shape="rect",color="gray",label=<access:[Latitude]<BR/><BR/>at: 'py-testcases/notebooks/guide/guide.py':94:14>];
	"node8" [shape="rect",color="gray",label=<access:[geometry]<BR/><BR/>at: 'py-testcases/notebooks/guide/guide.py':94:32>];
	"node9" [shape="rect",color="gray",label=<assign_to:[Latitude]<BR/><BR/>at: 'py-testcases/notebooks/guide/guide.py':94:53>];
	"node10" [shape="rect",color="gray",label=<LAMBDA([geometry], lambda [l] : l::y)<BR/><BR/>at: 'py-testcases/notebooks/guide/guide.py':94:53>];
	"node11" [shape="rect",color="gray",label=<access:[Longitude]<BR/><BR/>at: 'py-testcases/notebooks/guide/guide.py':95:15>];
	"node12" [shape="rect",color="gray",label=<access:[geometry]<BR/><BR/>at: 'py-testcases/notebooks/guide/guide.py':95:33>];
	"node13" [shape="rect",color="gray",label=<assign_to:[Longitude]<BR/><BR/>at: 'py-testcases/notebooks/guide/guide.py':95:54<BR/>Pointed by: df2>];
	"node14" [shape="rect",color="gray",label=<LAMBDA([geometry], lambda [l] : l::x)<BR/><BR/>at: 'py-testcases/notebooks/guide/guide.py':95:54>];
	"node15" [shape="rect",color="gray",label=<access:#TOP#<BR/><BR/>at: 'py-testcases/notebooks/guide/guide.py':102:35>];
	"node16" [shape="rect",color="gray",label=<access:#TOP#<BR/><BR/>at: 'py-testcases/notebooks/guide/guide.py':102:59>];
	"node17" [shape="rect",color="gray",label=<access:#TOP#<BR/><BR/>at: 'py-testcases/notebooks/guide/guide.py':102:97>];
	"node18" [shape="rect",color="gray",label=<access:#TOP#<BR/><BR/>at: 'py-testcases/notebooks/guide/guide.py':102:147<BR/>Pointed by: df2>];
	"node0" -> "node1" [color="black"];
	"node1" -> "node3" [color="black"];
	"node2" -> "node5" [color="black",style="dashed"];
	"node3" -> "node2" [color="black"];
	"node3" -> "node4" [color="black",style="dashed"];
	"node4" -> "node6" [color="black"];
	"node5" -> "node8" [color="black"];
	"node6" -> "node5" [color="blue",label=A];
	"node7" -> "node9" [color="black",style="dashed"];
	"node8" -> "node7" [color="black"];
	"node8" -> "node10" [color="black",style="dashed"];
	"node9" -> "node12" [color="black"];
	"node10" -> "node9" [color="blue",label=A];
	"node11" -> "node13" [color="black",style="dashed"];
	"node12" -> "node11" [color="black"];
	"node12" -> "node14" [color="black",style="dashed"];
	"node13" -> "node15" [color="black"];
	"node14" -> "node13" [color="blue",label=A];
	"node15" -> "node16" [color="black"];
	"node16" -> "node17" [color="black"];
	"node17" -> "node18" [color="black"];
	"node18" -> "node15" [color="black"];
subgraph cluster_legend {
	label="Legend";
	style=dotted;
	node [shape=plaintext];
	"legend" [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0"><tr><td align="right">node border&nbsp;</td><td align="left"><font color="gray">gray</font>, single</td></tr><tr><td align="right">entrypoint border&nbsp;</td><td align="left"><font color="black">black</font>, single</td></tr><tr><td align="right">exitpoint border&nbsp;</td><td align="left"><font color="black">black</font>, double</td></tr><tr><td align="right">sequential edge&nbsp;</td><td align="left"><font color="black">black</font>, solid</td></tr><tr><td align="right">assign edge&nbsp;</td><td align="left"><font color="blue">blue</font>, solid</td></tr><tr><td align="right">concat edge&nbsp;</td><td align="left"><font color="red">red</font>, solid</td></tr><tr><td align="right">consume edge&nbsp;</td><td align="left"><font color="black">black</font>, dashed</td></tr></table>>];
}

}
